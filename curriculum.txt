IC Stars Java Studio

This curriculum is designed to introduce new developers to the Java programming language.  It will also instil good coding practices such as test driven development and using version control.  Finally the project will emphasize the basic concepts of object oriented programming including: encapsulation, inheritance, and polymorphism.

Assumptions: I assume the participants have written some software before so they are familiar with concepts such as looping, control structures like if/then.

Preparation: I like to start with a Hello World application of sorts.  No IDE, nothing but the java command line utilities.  Get people comfortable with the idea of compilation.  Give them a peek at syntax, and let them run some code.  It is also important to start building the vocabulary.  Here is a list of things that each person should absolutely know before starting the actual project: Compile, Object, function, Class, IDE.

At this point it is good to talk about the tools.  Help them install the IDE.  Install jUnit.  Install the subversion client.  I suppose it could be controversial to make an absolute novice learn all these tools at once, but the practices that these tools reinforce are things we want to encourage from the start.  They shouldn't even know there is any other way to do things (until later).

First lesson:
Write up the prep session's vocab on a whiteboard and go through the words as a group.  Redefine and talk about each word.  Add words to the collective vocabulary as you go.  I like to tell the developers I am their customer and I am coming to them with a problem to solve.  They need to be on their toes to ask me questions that will give them the information they need to write the software.  The problem I start with is simple.  I am a busy person who needs software to keep track of my appointments.  The fundamental requirement is being able to create an appointment on my calendar.

Have a discussion about Objects and Classes.  Talk about state, encapsulation, and functionality.  Now have the developers pair off and all together go through implementing the solution together.  This is where you can show them how to create a unit test, get a red bar, then implement something and get a green bar.

Second lesson:
Once again start the lesson with a discussion of the vocabulary from the previous day.  Make sure everyone knows all topics covered.  Be sure to talk about 
